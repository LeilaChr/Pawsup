{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\", \"isDate\", \"showDatePicker\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\tarus\\\\OneDrive\\\\Documents\\\\GitHub\\\\projectf21-plsgibjob\\\\PawsupApp\\\\pawsup-frontend\\\\screens\\\\Signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport { Formik } from \"formik\";\nimport { Octicons, Ionicons } from \"@expo/vector-icons\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { StyledContainer, InnerContainer, PageTitle, StyledFormArea, LeftIcon, RightIcon, StyledInputLabel, StyledTextInput, StyledButton, MsgBox, ExtraView, ExtraText, TextLink, TextLinkContent, Colours, ButtonText } from \"./../components/styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nvar brand = Colours.brand,\n    darkLight = Colours.darkLight,\n    primary = Colours.primary;\nimport KeyboardAvoidingWrapper from \"../components/KeyboardAvoidingWrapper\";\nimport axios from 'axios';\n\nvar Signup = function Signup(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var _useState5 = useState(new Date(2000, 0, 1)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      date = _useState6[0],\n      setDate = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      messageType = _useState10[0],\n      setMessageType = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dob = _useState12[0],\n      setDob = _useState12[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(false);\n    setDate(currentDate);\n    setDob(currentDate);\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setShow('date');\n  };\n\n  var handleSignup = function handleSignup(credentials, setSubmitting) {\n    handleMessage(null);\n    var url = \"https://protected-shelf-96328.herokuapp.com/user/signup\";\n    axios.post(url, credentials).then(function (response) {\n      var result = response.data;\n      var status = result.status,\n          message = result.message,\n          data = result.data;\n\n      if (status !== 'SUCCESS') {\n        handleMessage(message, status);\n      } else {\n        navigation.navigate('Welcome', _objectSpread({}, data));\n      }\n\n      setSubmitting(false);\n    }).catch(function (error) {\n      setSubmitting(false);\n      handleMessage('An error occurred. Check your network and try again');\n    });\n  };\n\n  var handleMessage = function handleMessage(message) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'FAILED';\n    setMessage(message);\n    setMessageType(type);\n  };\n\n  return React.createElement(KeyboardAvoidingWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), React.createElement(InnerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, React.createElement(PageTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Pawsup Signup\"), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: \"date\",\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    style: {\n      backgroundColor: 'yellow'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      fullname: '',\n      dateofbirth: '',\n      phonenumber: '',\n      accounttype: '',\n      pettype: ''\n    },\n    onSubmit: function onSubmit(values, _ref2) {\n      var setSubmitting = _ref2.setSubmitting;\n      values = _objectSpread(_objectSpread({}, values), {}, {\n        dateofbirth: dob\n      });\n\n      if (values.email == '' || values.password == '' || values.fullname == '' || values.dateofbirth == '' || values.phonenumber == '' || values.accounttype == '' || values.pettype == '') {\n        handleMessage('Fill out all fields!');\n        setSubmitting(false);\n      } else {\n        handleSignup(values, setSubmitting);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        values = _ref3.values,\n        isSubmitting = _ref3.isSubmitting;\n    return React.createElement(StyledFormArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, React.createElement(MyTextInput, {\n      label: \"Email Address\",\n      placeholder: \"Email Address\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      icon: \"mail\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Password\",\n      icon: \"lock\",\n      placeholder: \"Password\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Full Name\",\n      placeholder: \"Full Name\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('fullname'),\n      onBlur: handleBlur('fullname'),\n      value: values.fullname,\n      icon: \"person\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Date of Birth\",\n      placeholder: \"YYYY/MM/DD\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('dateofbirth'),\n      onBlur: handleBlur('dateofbirth'),\n      value: dob ? dob.toDateString() : '',\n      icon: \"calendar\",\n      editable: false,\n      isDate: true,\n      showDatePicker: showDatePicker,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Phone Number\",\n      icon: \"person\",\n      placeholder: \"Phone Number\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('phonenumber'),\n      onBlur: handleBlur('phonenumber'),\n      value: values.phonenumber,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Account Type\",\n      icon: \"person\",\n      placeholder: \"Petowner/Petsitter\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('accounttype'),\n      onBlur: handleBlur('accounttype'),\n      value: values.accounttype,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Pet Type\",\n      icon: \"squirrel\",\n      placeholder: \"Pet Type\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('pettype'),\n      onBlur: handleBlur('pettype'),\n      value: values.pettype,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }), React.createElement(MsgBox, {\n      type: messageType,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    }, message), !isSubmitting && React.createElement(StyledButton, {\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 37\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 41\n      }\n    }, \"Signup\")), isSubmitting && React.createElement(StyledButton, {\n      disabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: primary,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 41\n      }\n    })), React.createElement(ExtraView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    }, React.createElement(ExtraText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 37\n      }\n    }, \"Already have an account? \"), React.createElement(TextLink, {\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    }, React.createElement(TextLinkContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 41\n      }\n    }, \"Login\"))));\n  }))));\n};\n\nvar MyTextInput = function MyTextInput(_ref4) {\n  var label = _ref4.label,\n      icon = _ref4.icon,\n      isPassword = _ref4.isPassword,\n      hidePassword = _ref4.hidePassword,\n      setHidePassword = _ref4.setHidePassword,\n      isDate = _ref4.isDate,\n      showDatePicker = _ref4.showDatePicker,\n      props = _objectWithoutProperties(_ref4, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, React.createElement(LeftIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, React.createElement(Octicons, {\n    name: icon,\n    size: 30,\n    color: brand,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  })), React.createElement(StyledInputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, label), !isDate && React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  })), isDate && React.createElement(TouchableOpacity, {\n    onPress: showDatePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }))), isPassword && React.createElement(RightIcon, {\n    onPress: function onPress() {\n      setHidePassword(!hidePassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: hidePassword ? 'md-eye-off' : 'md-eye',\n    size: 30,\n    color: darkLight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/tarus/OneDrive/Documents/GitHub/projectf21-plsgibjob/PawsupApp/pawsup-frontend/screens/Signup.js"],"names":["React","useState","StatusBar","Formik","Octicons","Ionicons","DateTimePicker","StyledContainer","InnerContainer","PageTitle","StyledFormArea","LeftIcon","RightIcon","StyledInputLabel","StyledTextInput","StyledButton","MsgBox","ExtraView","ExtraText","TextLink","TextLinkContent","Colours","ButtonText","brand","darkLight","primary","KeyboardAvoidingWrapper","axios","Signup","navigation","hidePassword","setHidePassword","show","setShow","Date","date","setDate","message","setMessage","messageType","setMessageType","dob","setDob","onChange","event","selectedDate","currentDate","showDatePicker","handleSignup","credentials","setSubmitting","handleMessage","url","post","then","response","result","data","status","navigate","catch","error","type","backgroundColor","email","password","fullname","dateofbirth","phonenumber","accounttype","pettype","values","handleChange","handleBlur","handleSubmit","isSubmitting","toDateString","MyTextInput","label","icon","isPassword","isDate","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\n// Formik\r\nimport { Formik } from \"formik\";\r\n\r\n// Icons\r\nimport { Octicons, Ionicons } from \"@expo/vector-icons\"\r\n\r\n// Datetimepicker\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\nimport {\r\n    StyledContainer,\r\n    InnerContainer,\r\n    PageTitle,\r\n    StyledFormArea,\r\n    LeftIcon,\r\n    RightIcon,\r\n    StyledInputLabel,\r\n    StyledTextInput,\r\n    StyledButton,\r\n    MsgBox,\r\n    ExtraView,\r\n    ExtraText,\r\n    TextLink,\r\n    TextLinkContent,\r\n    Colours,\r\n    ButtonText\r\n} from './../components/styles';\r\nimport { View, TouchableOpacity, ActivityIndicator } from 'react-native';\r\n\r\n// Colours\r\nconst { brand, darkLight, primary } = Colours;\r\n\r\n// Keyboard Avoiding Wrapper\r\nimport KeyboardAvoidingWrapper from \"../components/KeyboardAvoidingWrapper\";\r\n\r\n// API Client\r\nimport axios from 'axios';\r\n\r\nconst Signup = ({ navigation }) => {\r\n    const [hidePassword, setHidePassword] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [date, setDate] = useState(new Date(2000, 0, 1));\r\n    const [message, setMessage] = useState();\r\n    const [messageType, setMessageType] = useState();\r\n\r\n    // Actual Date of Birth value to be sent\r\n    const [dob, setDob] = useState();\r\n\r\n    const onChange = (event, selectedDate) => {\r\n        const currentDate = selectedDate || date;\r\n        setShow(false);\r\n        setDate(currentDate);\r\n        setDob(currentDate);\r\n    };\r\n\r\n    /*\r\n     * Makes DatePicker visible when called\r\n    */\r\n    const showDatePicker = () => {\r\n        setShow('date');\r\n    };\r\n\r\n    /*\r\n     * Handles pushing the signup data to the server which will push to the database. \r\n    */\r\n    const handleSignup = (credentials, setSubmitting) => {\r\n        handleMessage(null);\r\n        const url = \"https://protected-shelf-96328.herokuapp.com/user/signup\";\r\n\r\n        axios\r\n            .post(url, credentials)\r\n            .then((response) => {\r\n                const result = response.data;\r\n                const { status, message, data } = result;\r\n\r\n                if (status !== 'SUCCESS') {\r\n                    handleMessage(message, status);\r\n                } else {\r\n                    navigation.navigate('Welcome', { ...data });\r\n                }\r\n                setSubmitting(false);\r\n            })\r\n            .catch((error) => {\r\n                setSubmitting(false);\r\n                handleMessage('An error occurred. Check your network and try again');\r\n            });\r\n    }\r\n\r\n    const handleMessage = (message, type = 'FAILED') => {\r\n        setMessage(message);\r\n        setMessageType(type);\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingWrapper>\r\n            <StyledContainer>\r\n                <StatusBar style=\"dark\" />\r\n                <InnerContainer>\r\n                    <PageTitle>Pawsup Signup</PageTitle>\r\n\r\n                    {show && (\r\n                        <DateTimePicker\r\n                            testID=\"dateTimePicker\"\r\n                            value={date}\r\n                            mode=\"date\"\r\n                            is24Hour={true}\r\n                            display=\"default\"\r\n                            onChange={onChange}\r\n                            style={{\r\n                                backgroundColor: 'yellow',\r\n                            }}\r\n                        />\r\n                    )}\r\n\r\n                    <Formik\r\n                        initialValues={{ email: '', password: '', fullname: '', dateofbirth: '', phonenumber: '', accounttype: '', pettype: '' }}\r\n                        onSubmit={(values, { setSubmitting }) => {\r\n                            values = { ...values, dateofbirth: dob };\r\n                            if (values.email == '' || values.password == '' || values.fullname == '' || values.dateofbirth == '' || values.phonenumber == '' || values.accounttype == '' || values.pettype == '') {\r\n                                handleMessage('Fill out all fields!');\r\n                                setSubmitting(false);\r\n                            } else {\r\n                                handleSignup(values, setSubmitting);\r\n                            }\r\n                        }}\r\n                    >\r\n                        {({ handleChange, handleBlur, handleSubmit, values, isSubmitting }) => (\r\n                            <StyledFormArea>\r\n                                <MyTextInput\r\n                                    label=\"Email Address\"\r\n                                    placeholder=\"Email Address\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('email')}\r\n                                    onBlur={handleBlur('email')}\r\n                                    value={values.email}\r\n                                    keyboardType=\"email-address\"\r\n                                    icon=\"mail\"\r\n                                />\r\n\r\n                                <MyTextInput\r\n                                    label=\"Password\"\r\n                                    icon=\"lock\"\r\n                                    placeholder=\"Password\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('password')}\r\n                                    onBlur={handleBlur('password')}\r\n                                    value={values.password}\r\n                                    secureTextEntry={hidePassword}\r\n                                    isPassword={true}\r\n                                    hidePassword={hidePassword}\r\n                                    setHidePassword={setHidePassword}\r\n                                />\r\n\r\n                                <MyTextInput\r\n                                    label=\"Full Name\"\r\n                                    placeholder=\"Full Name\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('fullname')}\r\n                                    onBlur={handleBlur('fullname')}\r\n                                    value={values.fullname}\r\n                                    icon=\"person\"\r\n                                />\r\n\r\n                                <MyTextInput\r\n                                    label=\"Date of Birth\"\r\n                                    placeholder=\"YYYY/MM/DD\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('dateofbirth')}\r\n                                    onBlur={handleBlur('dateofbirth')}\r\n                                    value={dob ? dob.toDateString() : ''}\r\n                                    icon=\"calendar\"\r\n                                    editable={false}\r\n                                    isDate={true}\r\n                                    showDatePicker={showDatePicker}\r\n                                />\r\n\r\n                                <MyTextInput\r\n                                    label=\"Phone Number\"\r\n                                    icon=\"person\"\r\n                                    placeholder=\"Phone Number\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('phonenumber')}\r\n                                    onBlur={handleBlur('phonenumber')}\r\n                                    value={values.phonenumber}\r\n                                />\r\n\r\n                                <MyTextInput\r\n                                    label=\"Account Type\"\r\n                                    icon=\"person\"\r\n                                    placeholder=\"Petowner/Petsitter\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('accounttype')}\r\n                                    onBlur={handleBlur('accounttype')}\r\n                                    value={values.accounttype}\r\n                                />\r\n\r\n                                <MyTextInput\r\n                                    label=\"Pet Type\"\r\n                                    icon=\"squirrel\"\r\n                                    placeholder=\"Pet Type\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('pettype')}\r\n                                    onBlur={handleBlur('pettype')}\r\n                                    value={values.pettype}\r\n                                />\r\n\r\n                                <MsgBox type={messageType}>{message}</MsgBox>\r\n\r\n                                {!isSubmitting && (\r\n                                    <StyledButton onPress={handleSubmit}>\r\n                                        <ButtonText>Signup</ButtonText>\r\n                                    </StyledButton>\r\n                                )}\r\n\r\n                                {isSubmitting && (\r\n                                    <StyledButton disabled={true}>\r\n                                        <ActivityIndicator size=\"large\" color={primary} />\r\n                                    </StyledButton>\r\n                                )}\r\n\r\n                                <ExtraView>\r\n                                    <ExtraText>Already have an account? </ExtraText>\r\n                                    <TextLink onPress={() => navigation.navigate('Login')}>\r\n                                        <TextLinkContent>Login</TextLinkContent>\r\n                                    </TextLink>\r\n                                </ExtraView>\r\n                            </StyledFormArea>\r\n                        )}\r\n                    </Formik>\r\n                </InnerContainer>\r\n            </StyledContainer>\r\n        </KeyboardAvoidingWrapper>\r\n    );\r\n};\r\n\r\n// Style of Icons and DatePicker\r\nconst MyTextInput = ({ label, icon, isPassword, hidePassword, setHidePassword, isDate, showDatePicker, ...props }) => {\r\n    return (\r\n        <View>\r\n            <LeftIcon>\r\n                <Octicons name={icon} size={30} color={brand} />\r\n            </LeftIcon>\r\n            <StyledInputLabel>{label}</StyledInputLabel>\r\n            {!isDate && <StyledTextInput {...props} />}\r\n            {isDate && (\r\n                <TouchableOpacity onPress={showDatePicker}>\r\n                    <StyledTextInput {...props} />\r\n                </TouchableOpacity>\r\n            )}\r\n            {isPassword && (\r\n                <RightIcon\r\n                    onPress={() => {\r\n                        setHidePassword(!hidePassword);\r\n                    }}\r\n                >\r\n                    <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size={30} color={darkLight} />\r\n                </RightIcon>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}